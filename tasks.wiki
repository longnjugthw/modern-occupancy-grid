== Tasks (priority sorted) ==
* [X] Implement Merali2013icra
    * [ ] Find more about the time complexity of Merali 2013 icra paper
* [X] Make MCMC implementation from Brian faster
* [X] implement belief propagation
    * [X] Test summaryOf
    * [X] Write Update functions in terms of FactorGraph
    * [X] Combine to get a belief propagation algorithm
    * [X] Wrap gtsam to boost graph 
    * [X] Try belief propagation for total_edge_traversal for 4, 3, 2 sweeps. Does it yields better results than random_edge_traversal with edges / 3 iterations?
    Results don't look any better
    * [X] Write a small report on belief propgation results
        * [X] estimate 1000
        * [X] took 1025
* [.] implement dual decomposition
    * [ ] 1500 Understand paper Accelerated dual decomposition
    * [ ] 1530 Read implemented code
    * [o] 1600 Implement subgradient descent
        * [X] 1651 design the subproblem maximization
            This is taking time because the document only considers pairwise dual decomposition which needs to be generalized to arbitrary factor number of factors.
        * [X] Implement subgradient descent OccupancyGrid/include/LaserFactor.h
            * [X] estimate 1721 : extended algorithm to arbitrary number of factors
            * [X] Revised estimate 2: 1821 : designed the interafaces and class for algorithm
            * [X] Revised estimate 3: 1921 : started writing slave problem solver. Taking a break now.
            * [X] Revised estimate 4: 2221 
            * [X] Revised estimate 5: 0043 : finished writing the untested version of subgradient descent
        * [ ] 1851 test subgradient descent
        * [ ] 1921 debug subgradient descent
    * [ ] Implement data structure to wrap gtsam
* [ ] implement neighbour factor
* [ ] implement prior factor
 
== Observations ==
All methods that use factor graphs can be initialized with two-assumption method that is very-very fast.
A method that returns the optimal assignment as thought by each factor irrespective of what the cells already think about themselves. 

In case of belief propagation that means setting initial initializing x-f messages as equally likely (0.5) and the update sequences being factor to x edges first. But that would still be slower than two-assumption method because each f->x edge will just update one cell at a time not all the connected cells at a time.

In case of dual decomposition this might be true because we assign the cells at a bunch and then look for disagreements.

